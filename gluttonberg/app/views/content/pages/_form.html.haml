- require_js 'slug_management'
= form_for(@page, :action => action) do  
  = error_messages_for(@page)
  
  = block("General") do
    = text_field(:name, :label => "Name", :id => "page_title")
    = text_field(:navigation_label, :label => "Navigation Label")
    = text_field(:slug, :label => "Slug", :id => 'page_slug')
    - unless @pages.empty?
      = select(:parent_id, :collection => @pages, :value_method => "id", :text_method => "name", :label => "Parent page", :include_blank => true)
    = check_box(:home)
    %label{:for => "page_home", :class => "checkbox"} Set as homepage
  
  = block("Templates") do
    - unless @types.empty?
      = select(:page_type_id, :collection => @types, :value_method => "id", :text_method => "name", :label => "Type")
    - unless @layouts.empty?
      = select(:layout_id, :collection => @layouts, :value_method => "id", :text_method => "name", :label => "Layout")
      
  = block("Behaviour", :id => "pageBehaviours") do
    = radio_button(:behaviour, :value => "default")
    %label{:for => "gluttonberg::page_behaviour", :class => "inline"} Default
    %p A regular page where all the contents are fully editable.
    
    = radio_button(:behaviour, :value => "dynamic")
    %label{:for => "gluttonberg::page_behaviour", :class => "inline"} Dynamic
    %p 
      This page will contain dynamic content — pulled from the database. It 
      may also have some directly editable content.
      
    - unless Gluttonberg::Components.registered.empty?
      = radio_button(:behaviour, :value => "component")
      %label{:for => "gluttonberg::page_behaviour", :class => "inline"} Component
      %p
        This page has no editable content, instead it’s content is set by a 
        custom component.
        
      = select(:component, :collection => Gluttonberg::Components.registered, :include_blank => true, :text_method => :label, :value_method => :name)
   
  = form_controls(slice_url(:pages))
